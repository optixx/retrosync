name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: pyinstaller --onefile retrosync.py

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-executable
          path: ./dist/retrosync.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: pyinstaller --onefile retrosync.py

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-executable
          path: ./dist/retrosync

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable
        run: pyinstaller --onefile retrosync.py

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-executable
          path: ./dist/retrosync

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux]  # Wait for the build jobs to finish
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0  # Change this to your desired versioning scheme
          release_name: Release v1.0.0  # Change as needed
          body: |
            This release includes the following binaries:
            - Windows executable
            - macOS executable
            - Linux executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub

      - name: Upload Windows executable
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0
          files: ./dist/retrosync.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS executable
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0
          files: ./dist/retrosync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux executable
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0
          files: ./dist/retrosync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
